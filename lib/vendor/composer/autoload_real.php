<?php

// autoload_real.php @generated by Composer

<<<<<<< HEAD
class ComposerAutoloaderInit2b2e4e80644216037d42e4141dd9dca3
=======
class ComposerAutoloaderInit6717ae710ff8267514ad3760e6f45cce
>>>>>>> 8a4c2783b3f75cc3fc9f805c90fea58918761d08
{
    private static $loader;

    public static function loadClassLoader($class)
    {
        if ('Composer\Autoload\ClassLoader' === $class) {
            require __DIR__ . '/ClassLoader.php';
        }
    }

    public static function getLoader()
    {
        if (null !== self::$loader) {
            return self::$loader;
        }

<<<<<<< HEAD
        spl_autoload_register(array('ComposerAutoloaderInit2b2e4e80644216037d42e4141dd9dca3', 'loadClassLoader'), true, true);
        self::$loader = $loader = new \Composer\Autoload\ClassLoader();
        spl_autoload_unregister(array('ComposerAutoloaderInit2b2e4e80644216037d42e4141dd9dca3', 'loadClassLoader'));
=======
        spl_autoload_register(array('ComposerAutoloaderInit6717ae710ff8267514ad3760e6f45cce', 'loadClassLoader'), true, true);
        self::$loader = $loader = new \Composer\Autoload\ClassLoader();
        spl_autoload_unregister(array('ComposerAutoloaderInit6717ae710ff8267514ad3760e6f45cce', 'loadClassLoader'));
>>>>>>> 8a4c2783b3f75cc3fc9f805c90fea58918761d08

        $map = require __DIR__ . '/autoload_namespaces.php';
        foreach ($map as $namespace => $path) {
            $loader->set($namespace, $path);
        }

        $map = require __DIR__ . '/autoload_psr4.php';
        foreach ($map as $namespace => $path) {
            $loader->setPsr4($namespace, $path);
        }

        $classMap = require __DIR__ . '/autoload_classmap.php';
        if ($classMap) {
            $loader->addClassMap($classMap);
        }

        $loader->register(true);

        return $loader;
    }
}

<<<<<<< HEAD
function composerRequire2b2e4e80644216037d42e4141dd9dca3($file)
=======
function composerRequire6717ae710ff8267514ad3760e6f45cce($file)
>>>>>>> 8a4c2783b3f75cc3fc9f805c90fea58918761d08
{
    require $file;
}
